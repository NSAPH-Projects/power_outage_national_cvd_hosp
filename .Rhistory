) %>%
select(year, five_digit_fips, downscaled_county_estimate)
# read in counties hourly data
counties <-
list.files(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"hourly_county"
),
pattern = "*.fst",
full.names = TRUE
)
hourly <- lapply(counties, read_fst)
hourly <- rbindlist(hourly)
# reduce to just customer estimates
pous_based_estimates <- hourly %>%
select(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
customers_served_county,
county_person_time_missing_hours,
) %>% distinct()
View(pous_based_estimates)
pous_based_estimates <- pous_based_estimates %>% left_join(eia_estimates)
# This script joins customer estimates from EIA to the live customer estimate
# data, and calculates person-coverage. Person-coverage is calculated based on
# two numbers. The first is the maximum number of customers recorded as ‘out’
# or ‘tracked’ in the POUS dataset. The second is the estimate of the number of
# customers that should be in that county based on the households and number of
# establishments in that county, and the number of electrical customers in the
# state from EIA. If recorded customers in the POUS data were > 2x the EIA
# estimates, coverage was just reported as 1. Otherwise it’s POUS estimate/EIA
# estimate.
# Author: Heather
# Last updated: Oct 4th, 2024
# Libraries ---------------------------------------------------------------
pacman::p_load(tidyverse, here, lubridate, zoo, data.table, fst)
my.max <- function(x)
ifelse(!all(is.na(x)), max(x, na.rm = T), NA)
person_coverage_threshold <- 0.5
# Do ----------------------------------------------------------------------
# read in EIA estimates downscaled to the county level in an earlier script
eia_estimates <-
read_rds(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"downscaled_county_customer_estimates.RDS"
)
) %>%
select(year, five_digit_fips, downscaled_county_estimate)
# read in counties hourly data
counties <-
list.files(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"hourly_county"
),
pattern = "*.fst",
full.names = TRUE
)
hourly <- lapply(counties, read_fst)
hourly <- rbindlist(hourly)
# reduce to just customer estimates
pous_based_estimates <- hourly %>%
select(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
customers_served_county,
county_person_time_missing_hours,
) %>% distinct()
# Do ----------------------------------------------------------------------
pous_based_estimates <- pous_based_estimates %>% left_join(eia_estimates)
# mark when the pous data looks like it has an error
pous_based_estimates <- pous_based_estimates %>%
mutate(
too_big = case_when(
is.na(downscaled_county_estimate) ~ 0,
customers_served_county > downscaled_county_estimate ~
customers_served_county /
downscaled_county_estimate,
T ~ 0
)
)
# select the appropriate columns
pous_based_estimates <- pous_based_estimates[, .(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
hour,
customers_served_county,
county_person_time_missing_hours,
downscaled_county_estimate,
too_big
)]
View(pous_based_estimates)
# This script joins customer estimates from EIA to the live customer estimate
# data, and calculates person-coverage. Person-coverage is calculated based on
# two numbers. The first is the maximum number of customers recorded as ‘out’
# or ‘tracked’ in the POUS dataset. The second is the estimate of the number of
# customers that should be in that county based on the households and number of
# establishments in that county, and the number of electrical customers in the
# state from EIA. If recorded customers in the POUS data were > 2x the EIA
# estimates, coverage was just reported as 1. Otherwise it’s POUS estimate/EIA
# estimate.
# Author: Heather
# Last updated: Oct 4th, 2024
# Libraries ---------------------------------------------------------------
pacman::p_load(tidyverse, here, lubridate, zoo, data.table, fst)
my.max <- function(x)
ifelse(!all(is.na(x)), max(x, na.rm = T), NA)
person_coverage_threshold <- 0.5
# Do ----------------------------------------------------------------------
# read in EIA estimates downscaled to the county level in an earlier script
eia_estimates <-
read_rds(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"downscaled_county_customer_estimates.RDS"
)
) %>%
select(year, five_digit_fips, downscaled_county_estimate)
# read in counties hourly data
counties <-
list.files(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"hourly_county"
),
pattern = "*.fst",
full.names = TRUE
)
hourly <- lapply(counties, read_fst)
hourly <- rbindlist(hourly)
# reduce to just customer estimates
pous_based_estimates <- hourly %>%
select(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
customers_served_county,
county_person_time_missing_hours,
) %>% distinct()
# Do ----------------------------------------------------------------------
pous_based_estimates <- pous_based_estimates %>% left_join(eia_estimates)
# mark when the pous data looks like it has an error
pous_based_estimates <- pous_based_estimates %>%
mutate(
too_big = case_when(
is.na(downscaled_county_estimate) ~ 0,
customers_served_county > downscaled_county_estimate ~
customers_served_county /
downscaled_county_estimate,
T ~ 0
)
)
# select the appropriate columns
pous_based_estimates <- pous_based_estimates[, .(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
hour,
customers_served_county,
county_person_time_missing_hours,
downscaled_county_estimate,
too_big
)]
# This script joins customer estimates from EIA to the live customer estimate
# data, and calculates person-coverage. Person-coverage is calculated based on
# two numbers. The first is the maximum number of customers recorded as ‘out’
# or ‘tracked’ in the POUS dataset. The second is the estimate of the number of
# customers that should be in that county based on the households and number of
# establishments in that county, and the number of electrical customers in the
# state from EIA. If recorded customers in the POUS data were > 2x the EIA
# estimates, coverage was just reported as 1. Otherwise it’s POUS estimate/EIA
# estimate.
# Author: Heather
# Last updated: Oct 4th, 2024
# Libraries ---------------------------------------------------------------
pacman::p_load(tidyverse, here, lubridate, zoo, data.table, fst)
my.max <- function(x)
ifelse(!all(is.na(x)), max(x, na.rm = T), NA)
person_coverage_threshold <- 0.5
# Do ----------------------------------------------------------------------
# read in EIA estimates downscaled to the county level in an earlier script
eia_estimates <-
read_rds(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"downscaled_county_customer_estimates.RDS"
)
) %>%
select(year, five_digit_fips, downscaled_county_estimate)
# read in counties hourly data
counties <-
list.files(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"hourly_county"
),
pattern = "*.fst",
full.names = TRUE
)
hourly <- lapply(counties, read_fst)
hourly <- rbindlist(hourly)
# reduce to just customer estimates
pous_based_estimates <- hourly %>%
select(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
customers_served_county,
county_person_time_missing_hours,
) %>% distinct()
# Do ----------------------------------------------------------------------
pous_based_estimates <- pous_based_estimates %>% left_join(eia_estimates)
# mark when the pous data looks like it has an error
pous_based_estimates <- pous_based_estimates %>%
mutate(
too_big = case_when(
is.na(downscaled_county_estimate) ~ 0,
customers_served_county > downscaled_county_estimate ~
customers_served_county /
downscaled_county_estimate,
T ~ 0
)
)
# select the appropriate columns
pous_based_estimates <- pous_based_estimates[, .(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
hour,
customers_served_county,
county_person_time_missing_hours,
downscaled_county_estimate,
too_big
)]
View(pous_based_estimates)
# This script joins customer estimates from EIA to the live customer estimate
# data, and calculates person-coverage. Person-coverage is calculated based on
# two numbers. The first is the maximum number of customers recorded as ‘out’
# or ‘tracked’ in the POUS dataset. The second is the estimate of the number of
# customers that should be in that county based on the households and number of
# establishments in that county, and the number of electrical customers in the
# state from EIA. If recorded customers in the POUS data were > 2x the EIA
# estimates, coverage was just reported as 1. Otherwise it’s POUS estimate/EIA
# estimate.
# Author: Heather
# Last updated: Oct 4th, 2024
# Libraries ---------------------------------------------------------------
pacman::p_load(tidyverse, here, lubridate, zoo, data.table, fst)
my.max <- function(x)
ifelse(!all(is.na(x)), max(x, na.rm = T), NA)
person_coverage_threshold <- 0.5
# Do ----------------------------------------------------------------------
# read in EIA estimates downscaled to the county level in an earlier script
eia_estimates <-
read_rds(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"downscaled_county_customer_estimates.RDS"
)
) %>%
select(year, five_digit_fips, downscaled_county_estimate)
# read in counties hourly data
counties <-
list.files(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"hourly_county"
),
pattern = "*.fst",
full.names = TRUE
)
hourly <- lapply(counties, read_fst)
hourly <- rbindlist(hourly)
# reduce to just customer estimates
pous_based_estimates <- hourly %>%
select(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
customers_served_county,
county_person_time_missing_hours,
) %>% distinct()
# Do ----------------------------------------------------------------------
pous_based_estimates <- pous_based_estimates %>% left_join(eia_estimates)
# mark when the pous data looks like it has an error
pous_based_estimates <- pous_based_estimates %>%
mutate(
too_big = case_when(
is.na(downscaled_county_estimate) ~ 0,
customers_served_county > downscaled_county_estimate ~
customers_served_county /
downscaled_county_estimate,
T ~ 0
)
)
# select the appropriate columns
pous_based_estimates <- pous_based_estimates[, .(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
hour,
customers_served_county,
county_person_time_missing_hours,
downscaled_county_estimate,
too_big
)]
View(pous_based_estimates)
pacman::p_load(tidyverse, here, lubridate, zoo, data.table, fst)
my.max <- function(x)
ifelse(!all(is.na(x)), max(x, na.rm = T), NA)
person_coverage_threshold <- 0.5
# read in EIA estimates downscaled to the county level in an earlier script
eia_estimates <-
read_rds(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"downscaled_county_customer_estimates.RDS"
)
) %>%
select(year, five_digit_fips, downscaled_county_estimate)
# read in counties hourly data
counties <-
list.files(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"hourly_county"
),
pattern = "*.fst",
full.names = TRUE
)
hourly <- lapply(counties, read_fst)
hourly <- rbindlist(hourly)
# reduce to just customer estimates
pous_based_estimates <- hourly %>%
select(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
customers_served_county,
county_person_time_missing_hours,
) %>% distinct()
pous_based_estimates <- pous_based_estimates %>% left_join(eia_estimates)
View(pous_based_estimates)
# This script joins customer estimates from EIA to the live customer estimate
# data, and calculates person-coverage. Person-coverage is calculated based on
# two numbers. The first is the maximum number of customers recorded as ‘out’
# or ‘tracked’ in the POUS dataset. The second is the estimate of the number of
# customers that should be in that county based on the households and number of
# establishments in that county, and the number of electrical customers in the
# state from EIA. If recorded customers in the POUS data were > 2x the EIA
# estimates, coverage was just reported as 1. Otherwise it’s POUS estimate/EIA
# estimate.
# Author: Heather
# Last updated: Oct 4th, 2024
# Libraries ---------------------------------------------------------------
pacman::p_load(tidyverse, here, lubridate, zoo, data.table, fst)
my.max <- function(x)
ifelse(!all(is.na(x)), max(x, na.rm = T), NA)
person_coverage_threshold <- 0.5
# Do ----------------------------------------------------------------------
# read in EIA estimates downscaled to the county level in an earlier script
eia_estimates <-
read_rds(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"downscaled_county_customer_estimates.RDS"
)
) %>%
select(year, five_digit_fips, downscaled_county_estimate)
# read in counties hourly data
counties <-
list.files(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"hourly_county"
),
pattern = "*.fst",
full.names = TRUE
)
hourly <- lapply(counties, read_fst)
hourly <- rbindlist(hourly)
# reduce to just customer estimates
pous_based_estimates <- hourly %>%
select(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
customers_served_county,
county_person_time_missing_hours,
) %>% distinct()
# Do ----------------------------------------------------------------------
pous_based_estimates <- pous_based_estimates %>% left_join(eia_estimates)
# mark when the pous data looks like it has an error
pous_based_estimates <- pous_based_estimates %>%
mutate(
too_big = case_when(
is.na(downscaled_county_estimate) ~ 0,
customers_served_county > downscaled_county_estimate ~
customers_served_county /
downscaled_county_estimate,
T ~ 0
)
)
# select the appropriate columns
pous_based_estimates <- pous_based_estimates[, .(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
hour,
customers_served_county,
county_person_time_missing_hours,
downscaled_county_estimate,
too_big
)]
View(pous_based_estimates)
# This script joins customer estimates from EIA to the live customer estimate
# data, and calculates person-coverage. Person-coverage is calculated based on
# two numbers. The first is the maximum number of customers recorded as ‘out’
# or ‘tracked’ in the POUS dataset. The second is the estimate of the number of
# customers that should be in that county based on the households and number of
# establishments in that county, and the number of electrical customers in the
# state from EIA. If recorded customers in the POUS data were > 2x the EIA
# estimates, coverage was just reported as 1. Otherwise it’s POUS estimate/EIA
# estimate.
# Author: Heather
# Last updated: Oct 4th, 2024
# Libraries ---------------------------------------------------------------
pacman::p_load(tidyverse, here, lubridate, zoo, data.table, fst)
my.max <- function(x)
ifelse(!all(is.na(x)), max(x, na.rm = T), NA)
person_coverage_threshold <- 0.5
# Do ----------------------------------------------------------------------
# read in EIA estimates downscaled to the county level in an earlier script
eia_estimates <-
read_rds(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"downscaled_county_customer_estimates.RDS"
)
) %>%
select(year, five_digit_fips, downscaled_county_estimate)
# read in counties hourly data
counties <-
list.files(
here(
"data",
"power_outage_exposure_data_cleaning_output",
"hourly_county"
),
pattern = "*.fst",
full.names = TRUE
)
hourly <- lapply(counties, read_fst)
hourly <- rbindlist(hourly)
# reduce to just customer estimates
pous_based_estimates <- hourly %>%
select(
clean_state_name,
clean_county_name,
five_digit_fips,
year,
customers_served_county,
county_person_time_missing_hours,
) %>% distinct()
View(pous_based_estimates)
source("/Volumes/squirrel-utopia/power_outage_national_cvd_hosp/code/data_prep/power_outage_exposure_data_prep/b03_attach_denoms.R", echo=TRUE)
# libraries
pacman::p_load(here)
# set proxies for GitHub access
Sys.setenv(http_proxy="http://rcproxy.rc.fas.harvard.edu:3128")
Sys.setenv(https_proxy="http://rcproxy.rc.fas.harvard.edu:3128")
# stop R from being a lil bih about small and large numbers
options(scipen = 999)
# add token so we can use GitHub
gitcreds::gitcreds_set()
install.packages('renv')
renv::update()
source("/n/dominici_nsaph_l3/Lab/projects/power_outage_national_cvd_hosp/code/data_prep/fasse_dataprep/01_pull_cvd_hosp.R", echo=TRUE)
source("/n/dominici_nsaph_l3/Lab/projects/power_outage_national_cvd_hosp/code/data_prep/fasse_dataprep/02_pull_gridmet.R", echo=TRUE)
source("/n/dominici_nsaph_l3/Lab/projects/power_outage_national_cvd_hosp/code/data_prep/fasse_dataprep/04_urgent_hosp_combine_to_analytic.R", echo=TRUE)
source("/n/dominici_nsaph_l3/Lab/projects/power_outage_national_cvd_hosp/code/data_prep/fasse_dataprep/02_pull_gridmet.R", echo=TRUE)
